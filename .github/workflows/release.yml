name: Version and release library

on:
  workflow_dispatch:
    inputs:
      bump:
        description: 'Version bump type'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major

jobs:
  release:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Configure maven repository server
        run: |
          mkdir -p ~/.m2
          cat > ~/.m2/settings.xml <<EOF
          <settings>
            <servers>
              <server>
                <id>github</id>
                <username>${{ secrets.GITHUB_ACTOR }}</username>
                <password>${{ secrets.GITHUB_TOKEN }}</password>
              </server>
            </servers>
          </settings>
          EOF

      - name: Get current and new version
        id: versioning
        run: |
          CURRENT_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          BASE_VERSION=$(echo "$CURRENT_VERSION" | sed 's/-SNAPSHOT//')

          IFS='.' read -r MAJOR MINOR PATCH <<< "$BASE_VERSION"

          case "${{ github.event.inputs.bump }}" in
            major)
              MAJOR=$((MAJOR + 1))
              MINOR=0
              PATCH=0
              ;;
            minor)
              MINOR=$((MINOR + 1))
              PATCH=0
              ;;
            patch)
              PATCH=$((PATCH + 1))
              ;;
            *)
              echo "❌ Invalid bump type: ${{ github.event.inputs.bump }}"
              exit 1
              ;;
          esac

          NEW_VERSION="$MAJOR.$MINOR.$PATCH"
          echo "new_version=$NEW_VERSION" >> "$GITHUB_OUTPUT"
          echo "Calculated new version: $NEW_VERSION"

      - name: Set new version in pom.xml
        run: mvn versions:set -DnewVersion=${{ steps.versioning.outputs.new_version }}

      - name: Commit and tag new version
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git commit -am "Release v${{ steps.versioning.outputs.new_version }}"
          git tag v${{ steps.versioning.outputs.new_version }}
          git push origin main --follow-tags

      - name: Build and deploy with Maven
        run: mvn deploy -DskipTests

      - name: Generate changelog from commits
        id: changelog
        run: |
          PREV_TAG=$(git describe --tags --abbrev=0 HEAD^ || echo "")
          echo "Previous tag: $PREV_TAG"
          
          if [ -n "$PREV_TAG" ]; then
            git log $PREV_TAG..HEAD --pretty=format:"- %s (%an)" > CHANGELOG.md
          else
            git log --pretty=format:"- %s (%an)" > CHANGELOG.md
          fi
          
          echo "Generated changelog:"
          cat CHANGELOG.md

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.versioning.outputs.new_version }}
          name: Release v${{ steps.versioning.outputs.new_version }}
          body_path: CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
